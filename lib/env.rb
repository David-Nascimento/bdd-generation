# lib/bddgenx/env.rb
# encoding: utf-8
#
# Este arquivo √© respons√°vel por carregar todas as depend√™ncias da gem `bddgenx`.
# Ele inclui as bibliotecas padr√£o do Ruby, gems externas necess√°rias para o funcionamento da gem,
# e arquivos internos essenciais para a gera√ß√£o autom√°tica de BDD.
#
# A gem `bddgenx` oferece suporte √† internacionaliza√ß√£o (I18n), integra√ß√£o com APIs de IA (ChatGPT, Gemini),
# gera√ß√£o de documentos PDF, valida√ß√µes de entrada e estrutura√ß√£o do projeto para automa√ß√£o de testes em BDD.
#
# Depend√™ncias carregadas:
# - Gems padr√£o do Ruby: JSON, net/http, uri, fileutils, open3, bigdecimal, i18n
# - Gems externas: Prawn (PDF), Faraday (cliente HTTP), Dotenv (vari√°veis de ambiente), e outros utilit√°rios
#
# Estrutura:
# - Inicializa√ß√£o de vari√°veis de ambiente e idioma
# - Carregamento de depend√™ncias internas
# - Configura√ß√£o do modo de execu√ß√£o (static, chatgpt, gemini)
#

# --------------------------------------
# üì¶ Gems padr√£o da linguagem Ruby
# --------------------------------------

require 'json'           # Manipula√ß√£o de dados JSON
require 'net/http'       # Requisi√ß√µes HTTP nativas
require 'uri'            # Manipula√ß√£o de URLs
require 'fileutils'      # Opera√ß√µes com arquivos e diret√≥rios
require 'open3'          # Execu√ß√£o de comandos externos com captura de sa√≠da
require 'bigdecimal'     # C√°lculos matem√°ticos de alta precis√£o
require 'i18n'           # Internacionaliza√ß√£o (tradu√ß√µes din√¢micas)

# --------------------------------------
# üìö Gems externas
# --------------------------------------

require 'prawn'          # Gera√ß√£o de documentos PDF
require 'prawn/table'    # Suporte a tabelas no Prawn
require 'prawn-svg'      # Suporte a SVG no PDF
require 'faraday'        # Cliente HTTP para integra√ß√£o com APIs (ex: Gemini)
require 'dotenv'         # Carrega vari√°veis de ambiente do arquivo `.env`
require 'unicode'        # Manipula√ß√£o e normaliza√ß√£o de caracteres Unicode
require 'java_properties' # Manipula√ß√£o de arquivos `.properties`
require 'stringio'       # Manipula√ß√£o de objetos IO em mem√≥ria
require 'tempfile'       # Cria√ß√£o de arquivos tempor√°rios (se necess√°rio)

# --------------------------------------
# üåç Configura√ß√£o de idioma (I18n)
# --------------------------------------
#
# O arquivo de propriedades pode configurar o idioma das mensagens e textos.
# O idioma padr√£o √© o portugu√™s (pt), mas ele pode ser alterado para ingl√™s (en) conforme a necessidade.
#
# O c√≥digo verifica se a vari√°vel de ambiente `BDDGENX_LANG` foi definida,
# e se sim, usa esse valor para configurar o idioma ativo. Caso contr√°rio,
# o idioma padr√£o ser√° `pt`.

# Carrega vari√°veis de ambiente do arquivo .env
Dotenv.load  # Carrega vari√°veis como BDDGENX_LANG e APIs

# Define o caminho para os arquivos de tradu√ß√£o em YAML para o I18n
locales_path = File.expand_path('bddgenx/locales/*.yml', __dir__)
I18n.load_path += Dir[locales_path]

# Define o idioma ativo baseado na vari√°vel de ambiente BDDGENX_LANG ou usa o idioma padr√£o (pt)
idioma_env = ENV['BDDGENX_LANG']
if idioma_env && !idioma_env.strip.empty?
  I18n.locale = idioma_env.strip.to_sym
else
  I18n.locale = :pt
end


# --------------------------------------
# üîß Bundler (para projetos com Gemfile)
# --------------------------------------
#
# Carrega as depend√™ncias do projeto listadas no Gemfile, se existir.
# Isso permite que o Bundler gerencie as depend√™ncias e garanta que todas as gems necess√°rias
# estejam dispon√≠veis durante a execu√ß√£o da gem.
#
# Se um `Gemfile` estiver presente, o Bundler ser√° configurado para carregar essas depend√™ncias.

# Carrega as depend√™ncias listadas no Gemfile (se houver)
require 'bundler/setup' if File.exist?(File.expand_path('../../Gemfile', __FILE__))

# --------------------------------------
# üß© M√≥dulos utilit√°rios da gem
# --------------------------------------
#
# Aqui est√£o os m√≥dulos auxiliares utilizados para o funcionamento da gem `bddgenx`.
# Esses m√≥dulos oferecem funcionalidades como valida√ß√£o de estrutura de entrada,
# carregamento de fontes para gera√ß√£o de PDFs, e limpeza do conte√∫do Gherkin.

require_relative 'bddgenx/support/validator'                 # Valida estrutura de entrada
require_relative 'bddgenx/support/font_loader'               # Carrega fontes do PDF

# Utilit√°rios para limpeza e remo√ß√£o de passos duplicados
require_relative 'bddgenx/utils/gherkin_cleaner_helper'           # Sanitiza√ß√£o de Gherkin gerado
require_relative 'bddgenx/utils/remover_steps_duplicados_helper'  # Remove passos duplicados
require_relative 'bddgenx/utils/language_helper'                   # Helper para palavras-chave em diferentes idiomas

# --------------------------------------
# ü§ñ Clientes de IA (ChatGPT, Gemini)
# --------------------------------------
#
# Aqui s√£o carregados os m√≥dulos para integra√ß√£o com as APIs de IA: ChatGPT (OpenAI) e Gemini (Google).
# Esses clientes s√£o utilizados para gerar automaticamente os cen√°rios BDD com base nas hist√≥rias de usu√°rio.

require_relative 'bddgenx/ia/gemini_cliente'   # Integra√ß√£o com Google Gemini
require_relative 'bddgenx/ia/chatgtp_cliente'  # Integra√ß√£o com OpenAI (ChatGPT)

# --------------------------------------
# üõ† Geradores (features, steps e execu√ß√£o)
# --------------------------------------
#
# Esses m√≥dulos s√£o respons√°veis pela gera√ß√£o dos arquivos `.feature` e `*_steps.rb`,
# que s√£o a base para os testes BDD gerados pela gem.

require_relative 'bddgenx/generators/generator'        # Gera√ß√£o do conte√∫do `.feature`
require_relative 'bddgenx/generators/steps_generator'  # Gera√ß√£o de arquivos `*_steps.rb`
require_relative 'bddgenx/generators/runner'           # Orquestrador da execu√ß√£o CLI

# --------------------------------------
# üìÑ Parser e metadados
# --------------------------------------
#
# O parser √© respons√°vel por interpretar os arquivos `.txt` que cont√™m as hist√≥rias de usu√°rio,
# que depois s√£o transformadas em cen√°rios BDD e passos de testes.

require_relative 'parser'               # Interpreta arquivos `.txt` de entrada
require_relative 'bddgenx/version'      # L√™ vers√£o do arquivo `VERSION`

# --------------------------------------
# üì§ Relat√≥rios e exporta√ß√£o
# --------------------------------------
#
# Esses m√≥dulos gerenciam a exporta√ß√£o de resultados, gera√ß√£o de PDFs e backup das features,
# al√©m de rastrear as mudan√ßas realizadas nas features e no c√≥digo.

require_relative 'bddgenx/reports/pdf_exporter'  # Exporta features para PDF
require_relative 'bddgenx/reports/backup'        # Gera backups de arquivos
require_relative 'bddgenx/reports/tracer'        # Rastreabilidade de gera√ß√£o

# --------------------------------------
# ‚öôÔ∏è Configura√ß√£o da gem e loaders auxiliares
# --------------------------------------
#
# M√≥dulos auxiliares que cuidam de configura√ß√µes gerais da gem e a inicializa√ß√£o da estrutura do projeto.

require_relative 'bddgenx/configuration'  # Vari√°veis de configura√ß√£o (modo, APIs, etc.)
require_relative 'bddgenx/setup'          # Inicializa estrutura do projeto (input/, features/, etc.)
require_relative 'bddgenx/support/loader' # Exibe loaders/spinners no terminal

require_relative 'bddgenx/support/properties_loader'  # Carregador de arquivos .properties

# --------------------------------------
# üîÅ Define modo de execu√ß√£o (ambiente de dev por padr√£o)
# --------------------------------------
#
# Aqui s√£o carregadas as vari√°veis de ambiente, seja do arquivo `.properties` ou do `.env`.
# O c√≥digo busca as vari√°veis definidas no `.properties` e as coloca no ambiente (`ENV`),
# para que possam ser utilizadas em qualquer parte do c√≥digo.

properties = Bddgenx::PropertiesLoader.load_properties
# Definir vari√°veis de ambiente com base no arquivo .properties
ENV['CHATGPT_API_URL'] ||= properties['openai.api.url']
ENV['OPENAI_API_KEY'] ||= properties['openai.api.key']

ENV['GEMINI_API_URL'] ||= properties['gemini.api.url']
ENV['GEMINI_API_KEY'] ||= properties['gemini.api.key']

ENV['BDDGENX_MODE'] ||= properties['mode']
ENV['BDDGENX_LANG'] ||= properties['lang']
